-- Функции и return в LuaU

-- Что такое функция?
-- Функция — это именованный блок кода, который можно вызывать сколько угодно раз.
-- Функции помогают структурировать код, избегать повторений и делать программы удобнее для чтения и поддержки.

--------------------------------------------------------------
--------------------------------------------------------------

-- 1. Как объявить функцию
-- Синтаксис:
-- function имя_функции(параметры)
--     -- тело функции
-- end

-- Пример:
function sayHello()
    print("Привет, мир!")
end

-- Вызов функции:
sayHello() -- Выведет: Привет, мир!

--------------------------------------------------------------
--------------------------------------------------------------

-- 2. Функция с параметрами
-- Параметры позволяют передавать значения в функцию.
-- Это делает функцию универсальной: она может работать с разными данными.

function greet(name)
    -- name — это параметр функции
    print("Привет,", name)
end

greet("Русик")   -- Выведет: Привет, Русик
greet("Алексей") -- Выведет: Привет, Алексей

--------------------------------------------------------------
--------------------------------------------------------------

-- 3. Функция с несколькими параметрами
-- Можно передавать сразу несколько значений.

function multiply(a, b)
    -- a и b — параметры функции
    print("Произведение:", a * b)
end

multiply(3, 5)   -- Выведет: Произведение: 15
multiply(10, 2)  -- Выведет: Произведение: 20

--------------------------------------------------------------
--------------------------------------------------------------

-- 4. Функция с возвращаемым значением (return)
-- Функция может возвращать результат с помощью return.
-- return завершает выполнение функции и отдаёт результат "наружу".

function sum(a, b)
    return a + b -- возвращаем сумму двух чисел
end

local result = sum(5, 7)
print("Сумма:", result) -- Выведет: Сумма: 12

--------------------------------------------------------------
--------------------------------------------------------------

-- 5. Функция для работы с таблицами (массивами)
-- Пример: функция, которая считает сумму всех элементов массива

function arraySum(arr)
    local total = 0
    for i = 1, #arr do
        total = total + arr[i]
    end
    return total
end

local numbers = { 1, 2, 3, 4, 5 }
print("Сумма массива:", arraySum(numbers)) -- Выведет: Сумма массива: 15

--------------------------------------------------------------
--------------------------------------------------------------

-- 6. Функция с несколькими return (разные ветки)
function checkNumber(n)
    if n > 0 then
        return "Положительное"
    elseif n < 0 then
        return "Отрицательное"
    else
        return "Ноль"
    end
end

print(checkNumber(5))   -- Положительное
print(checkNumber(-2))  -- Отрицательное
print(checkNumber(0))   -- Ноль

--------------------------------------------------------------
--------------------------------------------------------------

-- 7. Функция с несколькими возвращаемыми значениями
function minMax(a, b)
    if a < b then
        return a, b
    else
        return b, a
    end
end

local min, max = minMax(3, 8)
print("Минимум:", min, "Максимум:", max) -- Минимум: 3 Максимум: 8

--------------------------------------------------------------
--------------------------------------------------------------

-- Где применяются функции с параметрами и return в Roblox?
-- - Для обработки событий (например, когда игрок заходит в игру: функция принимает игрока как параметр)
-- - Для работы с GUI (например, функция showMessage(text) показывает разный текст)
-- - Для создания объектов с разными свойствами (например, createBall(color, size))
-- - Для расчётов (например, addScore(player, points))
-- - Для возврата результата работы (например, вычисления урона, подсчёта очков)

--------------------------------------------------------------
--------------------------------------------------------------

-- Задачи на функции и return

--------------------------------------------------------------
--------------------------------------------------------------

-- 1. Приветствие с именем
-- Задача:
-- Напиши функцию, которая принимает имя и выводит "Добро пожаловать, <имя>!"

function welcome(name)
    print("Добро пожаловать,", name .. "!")
end

welcome("Алексей") -- Ожидается: Добро пожаловать, Алексей!

--------------------------------------------------------------
--------------------------------------------------------------

-- 2. Квадрат числа
-- Задача:
-- Напиши функцию, которая принимает число и возвращает его квадрат.

function square(n)
    return n * n
end

print("Квадрат 6:", square(6)) -- Ожидается: Квадрат 6: 36

--------------------------------------------------------------
--------------------------------------------------------------

-- 3. Проверка чётности
-- Задача:
-- Напиши функцию, которая принимает число и возвращает true, если оно чётное, иначе false.

function isEven(num)
    return num % 2 == 0
end

print("Число 4 чётное?", isEven(4)) -- Ожидается: true
print("Число 7 чётное?", isEven(7)) -- Ожидается: false

--------------------------------------------------------------
--------------------------------------------------------------

-- 4. Сумма всех чисел от 1 до n
-- Задача:
-- Напиши функцию, которая принимает число n и возвращает сумму всех чисел от 1 до n.

function sumToN(n)
    local total = 0
    for i = 1, n do
        total = total + i
    end
    return total
end

print("Сумма от 1 до 10:", sumToN(10)) -- Ожидается: 55

--------------------------------------------------------------
--------------------------------------------------------------

-- 5. Функция с несколькими параметрами и возвратом большего числа
-- Задача:
-- Напиши функцию, которая принимает два числа и возвращает большее из них.

function maxOfTwo(a, b)
    if a > b then
        return a
    else
        return b
    end
end

print("Большее из 5 и 8:", maxOfTwo(5, 8)) -- Ожидается: 8
print("Большее из 12 и 7:", maxOfTwo(12, 7)) -- Ожидается: 12

--------------------------------------------------------------
--------------------------------------------------------------

-- 6. Практическое задание:
-- Напиши функцию, которая принимает имя игрока и количество очков.
-- Функция должна выводить строку: "<имя> получил <очки> очков!"
-- Проверь работу функции с разными значениями.

function showScore(playerName, points)
    print(playerName .. " получил " .. points .. " очков!")
end

showScore("Русик", 10)      -- Ожидается: Русик получил 10 очков!
showScore("Алексей", 25)    -- Ожидается: Алексей получил 25 очков!
showScore("Player123", 100) -- Ожидается: Player123 получил 100 очков!

--------------------------------------------------------------
--------------------------------------------------------------

-- 7. Дополнительное практическое задание:
-- Напиши функцию, которая принимает три числа и возвращает их среднее арифметическое.
-- Проверь работу функции с разными значениями.

function average(a, b, c)
    return (a + b + c) / 3
end

print("Среднее 3, 6, 9:", average(3, 6, 9)) -- Ожидается: 6
print("Среднее 10, 20, 30:", average(10, 20, 30)) -- Ожидается: 20

--------------------------------------------------------------
--------------------------------------------------------------

-- Объяснение:

-- 1. Функции с параметрами делают твой код гибким и переиспользуемым.
-- 2. Ключевое слово return позволяет вернуть результат работы функции туда, где она была вызвана.
-- 3. Ты можешь вызывать одну и ту же функцию с разными значениями — это экономит время и уменьшает количество ошибок.
-- 4. В Roblox функции с параметрами и return часто используются для работы с игроками, объектами, событиями и интерфейсом.
-- 5. Хорошая функция делает одну задачу, имеет понятное имя и принимает только нужные параметры.
-- 6. Если не уверен, нужен ли параметр — подумай, будет ли функция полезна для разных данных.

-- Если остались вопросы по return или функциям — напиши, я помогу!